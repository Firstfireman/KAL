#!/usr/bin/env python
# *********************************************************
#
# File autogenerated for the path_publisher_ros_tool package
# by the rosinterface_handler package.
# Please do not edit.
#
# ********************************************************/

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

verbosity = gen.enum([
    gen.const(name='debug', type='str', value='debug', descr=''),
    gen.const(name='info', type='str', value='info', descr=''),
    gen.const(name='warning', type='str', value='warning', descr=''),
    gen.const(name='error', type='str', value='error', descr=''),
    gen.const(name='fatal', type='str', value='fatal', descr=''),
    ], 'Sets the verbosity for this node')
gen.add(name = 'verbosity', paramtype = 'str', level = 0, description = 'Sets the verbosity for this node', edit_method=verbosity, default="info")
gen.add(name = 'timer_rate', paramtype = 'double', level = 0, description = 'publisher frequency', edit_method="", default=5, min=0, max=10)
gen.add(name = 'kos_shift', paramtype = 'double', level = 0, description = 'distance from vehicle frame id referred position to real vehicle center point', edit_method="", default=-0.2, min=-0.5, max=0.5)
gen.add(name = 'delta_sigma', paramtype = 'double', level = 0, description = 'delta angle to generate sample path', edit_method="", default=0.01, min=0, max=0.1)
gen.add(name = 'center_x', paramtype = 'double', level = 0, description = 'x axis value of center point of map', edit_method="", default=0.0, min=0, max=15)
gen.add(name = 'center_y', paramtype = 'double', level = 0, description = 'y axis value of center point of map', edit_method="", default=0.0, min=0, max=15)
gen.add(name = 'path_length', paramtype = 'double', level = 0, description = 'length of a published path', edit_method="", default=6.0, min=1, max=10)
gen.add(name = 'drive_distance', paramtype = 'double', level = 0, description = 'drive distance before update path', edit_method="", default=1.0, min=0.1, max=3)
gen.add(name = 'point_distance', paramtype = 'double', level = 0, description = 'distance between two points', edit_method="", default=0.02, min=0.005, max=0.5)
gen.add(name = 'radius_noise', paramtype = 'double', level = 0, description = 'standard deviation of noise to radius when generate sample map', edit_method="", default=0.2, min=0, max=0.5)
gen.add(name = 'rotation_noise', paramtype = 'double', level = 0, description = 'standard deviation of noise to rotation when process sample map', edit_method="", default=10, min=0, max=20)
gen.add(name = 'shift_noise', paramtype = 'double', level = 0, description = 'standard deviation of noise to lateral shift base on anicar scale', edit_method="", default=0.5, min=0, max=1)
gen.add(name = 'local_scope', paramtype = 'double', level = 0, description = 'real world width and height of local area', edit_method="", default=2, min=0, max=50)
gen.add(name = 'least_points', paramtype = 'int', level = 0, description = 'least points in image area', edit_method="", default=10, min=0, max=500)
gen.add(name = 'stuck_time', paramtype = 'double', level = 0, description = 'max limited time the vehicle allowed to path through the path', edit_method="", default=10, min=0, max=20)
gen.add(name = 'BB_left_bottom_x', paramtype = 'double', level = 0, description = 'position of left bottom corner of boundary', edit_method="", default=0)
gen.add(name = 'BB_left_bottom_y', paramtype = 'double', level = 0, description = 'position of left bottom corner of boundary', edit_method="", default=0)
gen.add(name = 'BB_top_right_x', paramtype = 'double', level = 0, description = 'position of top right corner of boundary', edit_method="", default=10)
gen.add(name = 'BB_top_right_y', paramtype = 'double', level = 0, description = 'position of top right corner of boundary', edit_method="", default=10)
gen.add(name = 'road_length', paramtype = 'double', level = 0, description = 'the length of sampling path in train mode when sampling path from osm file', edit_method="", default=10)
Publisherandsubscriber = gen.add_group('Publisher and subscriber')
Publisherandsubscriber.add(name = 'path_publisher_topic', paramtype = 'str', level = 0, description = 'Topic for path publisher', edit_method="", default="/path")
Publisherandsubscriber.add(name = 'path_publisher_queue_size', paramtype = 'int', level = 0, description = 'Queue size for path publisher', edit_method="", default=5, min=0)

exit(gen.generate('path_publisher_ros_tool', 'path_publisher', 'PathPublisher'))
